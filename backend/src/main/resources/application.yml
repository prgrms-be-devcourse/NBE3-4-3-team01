spring:
  application:
    name: hotel

  data:
    redis:
      host: localhost
      port: 6379

  # API keys
  profiles:
    include:
      - dev
      - secret
      - api-keys
      - business-api

  # h2
  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    url: jdbc:h2:./db_dev;MODE=MySQL
    driverClassName: org.h2.Driver
    username: sa
    password: ""

  # JPA
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true

  # OAuth2
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
            scope:
              - email
              - profile
          kakao:
            client-id: ${OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH2_KAKAO_CLIENT_SECRET}
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
          naver:
            client-id: ${OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${OAUTH2_NAVER_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

 # 로깅
logging:
  level:
    org.springframework.security: DEBUG
    com.ll.hotel: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE

# OAuth2 관련 설정
app:
  oauth2:
    authorizedRedirectUris: http://localhost:3000/oauth/callback

custom:
  cors:
    allowed-origins:
      - http://localhost:3000
      - http://localhost:8080
